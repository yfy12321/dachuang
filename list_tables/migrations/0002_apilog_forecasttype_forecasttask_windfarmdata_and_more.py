# Generated by Django 5.2.4 on 2025-09-26 03:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("list_tables", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ApiLog",
            fields=[
                (
                    "log_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="日志ID"
                    ),
                ),
                ("endpoint", models.CharField(max_length=200, verbose_name="API端点")),
                (
                    "request_method",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("DELETE", "DELETE"),
                            ("PATCH", "PATCH"),
                        ],
                        max_length=10,
                        verbose_name="请求方法",
                    ),
                ),
                (
                    "request_params",
                    models.JSONField(blank=True, null=True, verbose_name="请求参数"),
                ),
                ("response_status", models.IntegerField(verbose_name="响应状态码")),
                (
                    "response_time",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="响应时间(ms)"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="客户端IP"
                    ),
                ),
                (
                    "user_agent",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="用户代理"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "API调用日志",
                "verbose_name_plural": "API调用日志",
                "db_table": "api_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ForecastType",
            fields=[
                (
                    "type_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="类型ID"
                    ),
                ),
                ("type_name", models.CharField(max_length=50, verbose_name="类型名称")),
                (
                    "description",
                    models.CharField(max_length=200, verbose_name="类型描述"),
                ),
                (
                    "forecast_horizon",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="预测时点数",
                    ),
                ),
                (
                    "time_interval",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="时间间隔(分钟)",
                    ),
                ),
                (
                    "api_endpoint",
                    models.CharField(max_length=200, verbose_name="API端点"),
                ),
            ],
            options={
                "verbose_name": "预测类型",
                "verbose_name_plural": "预测类型",
                "db_table": "forecast_type",
            },
        ),
        migrations.CreateModel(
            name="ForecastTask",
            fields=[
                (
                    "task_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="任务ID"
                    ),
                ),
                (
                    "forecast_type",
                    models.CharField(
                        choices=[
                            ("ultra_short", "超短期"),
                            ("short", "短期"),
                            ("medium", "中期"),
                        ],
                        max_length=20,
                        verbose_name="预测类型",
                    ),
                ),
                ("start_time", models.DateTimeField(verbose_name="开始时间")),
                ("end_time", models.DateTimeField(verbose_name="结束时间")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待处理"),
                            ("running", "运行中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="任务状态",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        db_column="station_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="list_tables.station",
                        verbose_name="关联场站",
                    ),
                ),
            ],
            options={
                "verbose_name": "预测任务",
                "verbose_name_plural": "预测任务",
                "db_table": "forecast_tasks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WindFarmData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_time", models.DateTimeField()),
                ("farm_id", models.CharField(max_length=50)),
                ("radiation", models.FloatField(blank=True, null=True)),
                ("surface_pressure", models.FloatField(blank=True, null=True)),
                ("humidity2", models.FloatField(blank=True, null=True)),
                ("temperature2", models.FloatField(blank=True, null=True)),
                ("temperature10", models.FloatField(blank=True, null=True)),
                ("temperature30", models.FloatField(blank=True, null=True)),
                ("temperature50", models.FloatField(blank=True, null=True)),
                ("temperature70", models.FloatField(blank=True, null=True)),
                ("temperature80", models.FloatField(blank=True, null=True)),
                ("temperature90", models.FloatField(blank=True, null=True)),
                ("temperature110", models.FloatField(blank=True, null=True)),
                ("direction10", models.FloatField(blank=True, null=True)),
                ("direction30", models.FloatField(blank=True, null=True)),
                ("direction50", models.FloatField(blank=True, null=True)),
                ("direction70", models.FloatField(blank=True, null=True)),
                ("direction80", models.FloatField(blank=True, null=True)),
                ("direction90", models.FloatField(blank=True, null=True)),
                ("direction110", models.FloatField(blank=True, null=True)),
                ("speed10", models.FloatField(blank=True, null=True)),
                ("speed30", models.FloatField(blank=True, null=True)),
                ("speed50", models.FloatField(blank=True, null=True)),
                ("speed70", models.FloatField(blank=True, null=True)),
                ("speed80", models.FloatField(blank=True, null=True)),
                ("speed90", models.FloatField(blank=True, null=True)),
                ("speed110", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Wind Farm Data",
                "verbose_name_plural": "Wind Farm Data",
                "ordering": ["-date_time"],
                "indexes": [
                    models.Index(
                        fields=["farm_id"], name="list_tables_farm_id_c69dff_idx"
                    ),
                    models.Index(
                        fields=["date_time"], name="list_tables_date_ti_b9685e_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MeasurePowerData",
            fields=[
                (
                    "measurement_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="测量ID"
                    ),
                ),
                ("timestamp", models.DateTimeField(verbose_name="时间戳")),
                (
                    "power_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="功率值(kW)"
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        db_column="station_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="list_tables.station",
                        verbose_name="关联场站",
                    ),
                ),
            ],
            options={
                "verbose_name": "实测功率数据",
                "verbose_name_plural": "实测功率数据",
                "db_table": "measurePowerData",
                "ordering": ["timestamp"],
                "unique_together": {("station", "timestamp")},
            },
        ),
        migrations.CreateModel(
            name="MeasureWeatherData1",
            fields=[
                (
                    "weather_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="气象ID"
                    ),
                ),
                ("date_time", models.DateTimeField(verbose_name="时间戳")),
                (
                    "wspd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="风速(m/s)",
                    ),
                ),
                (
                    "wdir",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="风向(度)",
                    ),
                ),
                (
                    "swdown",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地表向下短波辐射(W/m²)",
                    ),
                ),
                (
                    "glw",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地表向上长波辐射(W/m²)",
                    ),
                ),
                (
                    "swddni",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="直接法向短波辐射(W/m²)",
                    ),
                ),
                (
                    "swddir",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="直接短波辐射(W/m²)",
                    ),
                ),
                (
                    "swddif",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="散射短波辐射(W/m²)",
                    ),
                ),
                (
                    "td2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米露点温度(°C)",
                    ),
                ),
                (
                    "tsd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地面温度(°C)",
                    ),
                ),
                (
                    "dpt2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米露点温度(°C)",
                    ),
                ),
                (
                    "psfc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地表气压(Pa)",
                    ),
                ),
                (
                    "rh2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米相对湿度(%)",
                    ),
                ),
                (
                    "qv2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米水汽混合比(kg/kg)",
                    ),
                ),
                (
                    "clflo",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="低层云量(0-1)",
                    ),
                ),
                (
                    "clfhi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="高层云量(0-1)",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        db_column="station_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="list_tables.station",
                        verbose_name="关联场站",
                    ),
                ),
            ],
            options={
                "verbose_name": "实测气象数据1",
                "verbose_name_plural": "实测气象数据1",
                "db_table": "measureWeatherData1",
                "ordering": ["date_time"],
                "unique_together": {("station", "date_time")},
            },
        ),
        migrations.CreateModel(
            name="MeasureWeatherData2",
            fields=[
                (
                    "weather_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="气象记录ID"
                    ),
                ),
                ("date_time", models.DateTimeField(verbose_name="观测时间戳")),
                (
                    "surface_pressure",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(800),
                            django.core.validators.MaxValueValidator(1100),
                        ],
                        verbose_name="地表气压(hPa)",
                    ),
                ),
                (
                    "humidity_2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="2米湿度(%)",
                    ),
                ),
                (
                    "temperature_110m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-50),
                            django.core.validators.MaxValueValidator(50),
                        ],
                        verbose_name="110米温度(°C)",
                    ),
                ),
                (
                    "wind_direction_110m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(360),
                        ],
                        verbose_name="110米风向(度)",
                    ),
                ),
                (
                    "wind_speed_70m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                        verbose_name="70米风速(m/s)",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        db_column="station_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="list_tables.station",
                        verbose_name="关联场站",
                    ),
                ),
            ],
            options={
                "verbose_name": "气象数据2（多高度层）",
                "verbose_name_plural": "气象数据2（多高度层）",
                "db_table": "measureWeatherData2",
                "ordering": ["-date_time"],
                "unique_together": {("station", "date_time")},
            },
        ),
        migrations.CreateModel(
            name="ShortPowerData",
            fields=[
                (
                    "forecast_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="预测记录ID"
                    ),
                ),
                ("timestamp", models.DateTimeField(verbose_name="预测时间点")),
                (
                    "power_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="功率预测值(kW)",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        db_column="task_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="list_tables.forecasttask",
                        verbose_name="关联预测任务",
                    ),
                ),
            ],
            options={
                "verbose_name": "短期功率预测数据",
                "verbose_name_plural": "短期功率预测数据",
                "db_table": "shortPowerData",
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="shortPowerD_timesta_e1fc29_idx"
                    ),
                    models.Index(
                        fields=["task", "timestamp"],
                        name="shortPowerD_task_id_26ec31_idx",
                    ),
                ],
                "unique_together": {("task", "timestamp")},
            },
        ),
        migrations.CreateModel(
            name="WeatherData1",
            fields=[
                (
                    "weather_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="气象ID"
                    ),
                ),
                ("date_time", models.DateTimeField(verbose_name="时间戳")),
                (
                    "wspd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="风速(m/s)",
                    ),
                ),
                (
                    "wdir",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="风向(度)",
                    ),
                ),
                (
                    "swdown",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地表向下短波辐射(W/m²)",
                    ),
                ),
                (
                    "glw",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地表向上长波辐射(W/m²)",
                    ),
                ),
                (
                    "swddni",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="直接法向短波辐射(W/m²)",
                    ),
                ),
                (
                    "swddir",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="直接短波辐射(W/m²)",
                    ),
                ),
                (
                    "swddif",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="散射短波辐射(W/m²)",
                    ),
                ),
                (
                    "td2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米露点温度(°C)",
                    ),
                ),
                (
                    "tsd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地面温度(°C)",
                    ),
                ),
                (
                    "dpt2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米露点温度(°C)",
                    ),
                ),
                (
                    "psfc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="地表气压(Pa)",
                    ),
                ),
                (
                    "rh2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米相对湿度(%)",
                    ),
                ),
                (
                    "qv2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="2米水汽混合比(kg/kg)",
                    ),
                ),
                (
                    "clflo",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="低层云量(0-1)",
                    ),
                ),
                (
                    "clfhi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="高层云量(0-1)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "station",
                    models.ForeignKey(
                        db_column="station_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="list_tables.station",
                        verbose_name="关联场站",
                    ),
                ),
            ],
            options={
                "verbose_name": "气象数据1",
                "verbose_name_plural": "气象数据1",
                "db_table": "weatherdata1",
                "unique_together": {("station", "date_time")},
            },
        ),
        migrations.CreateModel(
            name="WeatherData2",
            fields=[
                (
                    "weather_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="气象ID"
                    ),
                ),
                ("date_time", models.DateTimeField(verbose_name="观测时间戳")),
                (
                    "surface_pressure",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="地表气压(hPa)",
                    ),
                ),
                (
                    "humidity_2m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="2米湿度(%)",
                    ),
                ),
                (
                    "temperature_110m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="110米温度(°C)",
                    ),
                ),
                (
                    "wind_direction_110m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="110米风向(度)",
                    ),
                ),
                (
                    "wind_speed_70m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="70米风速(m/s)",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        db_column="station_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="list_tables.station",
                        verbose_name="关联场站",
                    ),
                ),
            ],
            options={
                "verbose_name": "气象数据2",
                "verbose_name_plural": "气象数据2",
                "db_table": "weatherdata2",
                "unique_together": {("station", "date_time")},
            },
        ),
    ]
